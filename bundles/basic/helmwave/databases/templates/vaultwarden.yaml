apiVersion: batch/v1
kind: Job
metadata:
  name: registry-db-user-job # Name of the kubernetes job that creates the database
spec:
  template:
    spec:
      containers:
        - name: pg-client # Container name in kubernetes, doesn't really matter
          image: postgres # Docker image to use, in the case latest postgres from docker hub, should probably have a fixed version. :latest, :14
          env:
            - name: PGDATABASE # This env variable is used per default, by PSQL
              value: postgres # Database name of default database, almost always "postgres" 
            - name: PGHOST # This env variable is used per default, by PSQL
              value: stolon-proxy.stolon # Database host. Easiest way to check is to check the services created by operator
            - name: PGUSER # This env variable is used per default, by PSQL
              value: postgres # Almost always postgres
            - name: PGPASSWORD # This env variable is used per default, by PSQL
              valueFrom:
                secretKeyRef: 
                  name: {{ .Values.postgres.secretName }}
                  key: {{ .Values.postgres.secretKey }}

#  values.yaml example => should match the secret created by operator
#  postgres:
#    secretName: postgres-secret
#    secretKey: password


              value: {{ .Values.postgresPassword }}   # Default password for postres. Should get from secret with valuesFrom          
            - name: APPLICATIONUSER
              value: {{ .Values.vaultwarden.username }} # Use valuesFrom and secret instead
            - name: APPLICATIONPASSWORD
              value: {{ .Values.vaultwarden.password }} # Use valuesFrom and secret instead
          command: ["psql","-c", "CREATE ROLE $(APPLICATIONUSER) WITH LOGIN PASSWORD '$(APPLICATIONPASSWORD)'"]
      restartPolicy: Never
  backoffLimit: 10
---
apiVersion: batch/v1
kind: Job
metadata:
  name: registry-db-job
spec:
  template:
    spec:
      containers:
        - name: pg-client
          image: postgres
          env:
            - name: PGDATABASE
              value: postgres
            - name: PGHOST
              value: stolon-proxy.stolon
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              value: @PGPASSWORD@
            - name: REGISTRYUSER
              value: harbor
            - name: REGISTRYDB
              value: registry
            - name: REGISTRYPASSWORD
              value: @REGISTRY_PASSWORD@
          command: ["psql","-c", "CREATE DATABASE $(REGISTRYDB) WITH OWNER $(REGISTRYUSER)"]
      restartPolicy: Never
  backoffLimit: 10
---
apiVersion: batch/v1
kind: Job
metadata:
  name: registry-db-grant-job
spec:
  template:
    spec:
      containers:
        - name: pg-client
          image: postgres
          env:
            - name: PGDATABASE
              value: postgres
            - name: PGHOST
              value: stolon-proxy.stolon
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              value: @PGPASSWORD@
            - name: REGISTRYUSER
              value: harbor
            - name: REGISTRYDB
              value: registry
            - name: REGISTRYPASSWORD
              value: @REGISTRY_PASSWORD@
          command: ["psql","-c", "GRANT ALL PRIVILEGES ON DATABASE $(REGISTRYDB) TO $(REGISTRYUSER)"]
      restartPolicy: Never
  backoffLimit: 10
