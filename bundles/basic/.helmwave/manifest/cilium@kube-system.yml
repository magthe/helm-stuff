---
# Source: cilium/charts/cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"

# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
---
# Source: cilium/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlmQlgwMm1nejlMU1Y0MkFWN0VrZ2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE9URTVORGN4TTFvWERUSTJNRFV4T0RFNQpORGN4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExSG1uNTVEWTQyUFZNZXRvSjdiQWU2dDg0T0xBVmwxMWJxMDVWbkVMMWM0UXB1OVMKYy9kRnR1cEMwWHp5dktCWXFMOEN3dWF2cVJ5QUxKb3gxMThYT0ZpWlk1d29WZEhVTjd2Zkl4YUg5UGFsRGw0UAp1a1hwdWcxMUlmaFJWZGQ0N0l1NTFUOExaUDhaSEM5b0pWVTRkbUJYOGdaNDE2QzI2RUZXcUUzS2xxM3kvS2VaCllxbXUyUjBqZ05qeG1nMVJTbWcwNXJWd25EWkZXd0VSakozUjAzVldSVzRlRmhtSjJLYUxoaDU0dHkySmU2OUoKeStzMXlRZ2Z5V1FXcldrZ1JCUmY1ekpEZ09FRSs1WjMxK241bGk2UFpWYnZZUnp5eVlOWW13YXpqT2hkU3o2cApTR2xCTGVBa0hSNHhhRmJlMTBZNlB2RUtoVS90enQ0YU5QN2RBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREl5K0tYZ3l2dXhpZDAvVHVNQzhsTkplb3R4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkdLVVdIcEV2ckFXMkpGKy94VlkzalBGWGF3RisvdktiOWFTdmN6WEpoOUlNR1J5UW9FL3MrClN3aW83UGhLQUhVa2JRV1NnaUFUQldJTllvb2JyMVhhQjVYb1FBVUgwQmwvWUg3YUlzQzZWb2lCZmwwejJkWTMKTVJldlVPeVNtcEdKVjAvYWh0TGwwNmI3L3ZyaWY3TTB4STRpY1Z1dnFmSGpMS0VvQVc0NGYzUTFSYzhZek5rRgovQzRFR3llQXRkSU1WYW0xSjZMNXpITjZsMGh1Y1Q3RHhXWEhMTnlBRlRFN1Z1K2F6OFVobmlyWld1U1F5VCtTCkpqOFRzOHJzaXV1U0cya3N6Z2FzbHMybGZQUEhrOUZQd0czS3RFdXhleldPZzlGdjdYbXBKSU85MHkwZ3RQWlcKeitMMGRPZmV3S095WG5zK2NUR1ZWZWsxMVBBNUdGbkIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMUhtbjU1RFk0MlBWTWV0b0o3YkFlNnQ4NE9MQVZsMTFicTA1Vm5FTDFjNFFwdTlTCmMvZEZ0dXBDMFh6eXZLQllxTDhDd3VhdnFSeUFMSm94MTE4WE9GaVpZNXdvVmRIVU43dmZJeGFIOVBhbERsNFAKdWtYcHVnMTFJZmhSVmRkNDdJdTUxVDhMWlA4WkhDOW9KVlU0ZG1CWDhnWjQxNkMyNkVGV3FFM0tscTN5L0tlWgpZcW11MlIwamdOanhtZzFSU21nMDVyVnduRFpGV3dFUmpKM1IwM1ZXUlc0ZUZobUoyS2FMaGg1NHR5MkplNjlKCnkrczF5UWdmeVdRV3JXa2dSQlJmNXpKRGdPRUUrNVozMStuNWxpNlBaVmJ2WVJ6eXlZTlltd2F6ak9oZFN6NnAKU0dsQkxlQWtIUjR4YUZiZTEwWTZQdkVLaFUvdHp0NGFOUDdkQXdJREFRQUJBb0lCQUZqRHRqeU1pNzk3Ym82YgpUUGtDWlNtRk8vZHJZM1R4T0dVVFl4ZlV4Ri8rNVlBSURVYzdMMW02Umsza1NEZzdPSzdPbGFXODMvZmpXenpHCjhqbUtsVlhKMWRNQ1l1dHZiSndZRmFGQUFXNTZOL3hubVdSMVhxNkdmci9CVUtGdkVpcW9PT3Q0bWhjSVo0SVoKNEFWd3M5VG9iUFZFZE9tSVQ4RjV3bTB2aW9vbHYrRTRlV2x1YWtUenpJS3FwRWFNUWlCLzJ5dUhUZzRsdDU2NQo0QWpWUW1URG0yYTBCbDlJY3hzQU1CRTdBUWlIc1dpdnRpMkRMTHpVa2lUYUFiYXVuTnVEYXBIRGNqSlR1QWJwCk9jUysxUDh5TlNEdVc2SXYxZ2lnQmlRdUV4cTA5bE9WejQvWVlaVmdtR21pSEtQLzF0cXlCMFJqWEYybm5uMncKMGpVRXRSRUNnWUVBLzhyRUVLVU1BejVjN2IyaU95M2NsWmo0a2NzazV3MXgraWYvZjYvVUxmdGNMVGFCbFU3ZAorV21aaSt4NWFtTGpMTVI1QTdkNzBaMGFCNmpuTVAvaGpDa2xPL09UVjNKRUFRczRFR0ZMYjIyVmRHQ2ViRVJxCnd5bHpMVzIzQm5RNnNYL3NoSkhqUnhQV1AzTWEwT05lNCs0OStPZkE4RDJuUE5oM3UvTHY1NXNDZ1lFQTFLWGcKQi8rTHh0dGphZnF2N2ZZU3dBRitNRzdPSm1BanFMQWxIeURrV2Z5RzJ4TVA1OCttU0x0a2hudVM0R3lKeHFqYgp0OUJmR2RHSjJjUXBpejdORlVjSllGeWZyZ29EaVpFS2NTdE9rYzZMU0dtYTdwMnYvSlpkemtvMTlkcEQxZUpECjJ0bHdDWXp4SlNhSTRJaEsrV0dWL0lUYm9DZ0pYdzB6d1ovY1dya0NnWUFxS2c5bHV2OGU3Y0c5d3J1aVM2NEgKenQ1eWtlejBWVWdMZDFwcmZ0MVg4dzQvdWJOa25FcUUyWDVoRFVyNldYQ2ZLWWZWTUFLdUM5cUZscmI5WWNDWgpMUk1oTGNhRTdLWC9FZzFjemR6MGNqam5wU0dZTVRMMEZyb1FxL3cyaVNRL3JCbWR4THFWTmRUa1FxSVIrdGppCmM1d3RrbTVBYTdsTWsxWXhXaHRucndLQmdRQ3hBdXM4ZlRMRGMvaUxUY3lKRDErSVNUWGI1MERmblFQUjlkN1EKekxhSldiYUFRcHZvNFdlUC83MnNYTTFrMTdUUWs5dGlaYWZrZkJKK0hkWmZQUVhHZ24yQm8xaWdyV0ZJY0YzNgoyb3Zxdjc0ZHB4cjdLblJHbEh5OXJmVEJGTkdIQjNSb2hydkdsM1pjOEhqY1AxZjV3NHZ3eWo5d1VDT001aGFCClJTdE9zUUtCZ1FDRGR2cUpIOHBWMDk3QlpoZjJYNmF4WWpBQW1iSnVkam85RWRKL0ErOTN4SkNndEZxVkJ3R2cKRTBxbVhyR0hzd1BEZEtjc3R3a2N0c3pBVkpsZVZpdi9SdTExWW1QREEyT1Axd3V6SURxKzUyQlR0RW1odVI3cwpTRGVGU01RUmZ5SzJRMURIQ1g3R3RKekZPaFNkTVNJd2hKQnZhKzR0QkZVRmRrSEI4UU1qcEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlmQlgwMm1nejlMU1Y0MkFWN0VrZ2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE9URTVORGN4TTFvWERUSTJNRFV4T0RFNQpORGN4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExSG1uNTVEWTQyUFZNZXRvSjdiQWU2dDg0T0xBVmwxMWJxMDVWbkVMMWM0UXB1OVMKYy9kRnR1cEMwWHp5dktCWXFMOEN3dWF2cVJ5QUxKb3gxMThYT0ZpWlk1d29WZEhVTjd2Zkl4YUg5UGFsRGw0UAp1a1hwdWcxMUlmaFJWZGQ0N0l1NTFUOExaUDhaSEM5b0pWVTRkbUJYOGdaNDE2QzI2RUZXcUUzS2xxM3kvS2VaCllxbXUyUjBqZ05qeG1nMVJTbWcwNXJWd25EWkZXd0VSakozUjAzVldSVzRlRmhtSjJLYUxoaDU0dHkySmU2OUoKeStzMXlRZ2Z5V1FXcldrZ1JCUmY1ekpEZ09FRSs1WjMxK241bGk2UFpWYnZZUnp5eVlOWW13YXpqT2hkU3o2cApTR2xCTGVBa0hSNHhhRmJlMTBZNlB2RUtoVS90enQ0YU5QN2RBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREl5K0tYZ3l2dXhpZDAvVHVNQzhsTkplb3R4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkdLVVdIcEV2ckFXMkpGKy94VlkzalBGWGF3RisvdktiOWFTdmN6WEpoOUlNR1J5UW9FL3MrClN3aW83UGhLQUhVa2JRV1NnaUFUQldJTllvb2JyMVhhQjVYb1FBVUgwQmwvWUg3YUlzQzZWb2lCZmwwejJkWTMKTVJldlVPeVNtcEdKVjAvYWh0TGwwNmI3L3ZyaWY3TTB4STRpY1Z1dnFmSGpMS0VvQVc0NGYzUTFSYzhZek5rRgovQzRFR3llQXRkSU1WYW0xSjZMNXpITjZsMGh1Y1Q3RHhXWEhMTnlBRlRFN1Z1K2F6OFVobmlyWld1U1F5VCtTCkpqOFRzOHJzaXV1U0cya3N6Z2FzbHMybGZQUEhrOUZQd0czS3RFdXhleldPZzlGdjdYbXBKSU85MHkwZ3RQWlcKeitMMGRPZmV3S095WG5zK2NUR1ZWZWsxMVBBNUdGbkIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMUhtbjU1RFk0MlBWTWV0b0o3YkFlNnQ4NE9MQVZsMTFicTA1Vm5FTDFjNFFwdTlTCmMvZEZ0dXBDMFh6eXZLQllxTDhDd3VhdnFSeUFMSm94MTE4WE9GaVpZNXdvVmRIVU43dmZJeGFIOVBhbERsNFAKdWtYcHVnMTFJZmhSVmRkNDdJdTUxVDhMWlA4WkhDOW9KVlU0ZG1CWDhnWjQxNkMyNkVGV3FFM0tscTN5L0tlWgpZcW11MlIwamdOanhtZzFSU21nMDVyVnduRFpGV3dFUmpKM1IwM1ZXUlc0ZUZobUoyS2FMaGg1NHR5MkplNjlKCnkrczF5UWdmeVdRV3JXa2dSQlJmNXpKRGdPRUUrNVozMStuNWxpNlBaVmJ2WVJ6eXlZTlltd2F6ak9oZFN6NnAKU0dsQkxlQWtIUjR4YUZiZTEwWTZQdkVLaFUvdHp0NGFOUDdkQXdJREFRQUJBb0lCQUZqRHRqeU1pNzk3Ym82YgpUUGtDWlNtRk8vZHJZM1R4T0dVVFl4ZlV4Ri8rNVlBSURVYzdMMW02Umsza1NEZzdPSzdPbGFXODMvZmpXenpHCjhqbUtsVlhKMWRNQ1l1dHZiSndZRmFGQUFXNTZOL3hubVdSMVhxNkdmci9CVUtGdkVpcW9PT3Q0bWhjSVo0SVoKNEFWd3M5VG9iUFZFZE9tSVQ4RjV3bTB2aW9vbHYrRTRlV2x1YWtUenpJS3FwRWFNUWlCLzJ5dUhUZzRsdDU2NQo0QWpWUW1URG0yYTBCbDlJY3hzQU1CRTdBUWlIc1dpdnRpMkRMTHpVa2lUYUFiYXVuTnVEYXBIRGNqSlR1QWJwCk9jUysxUDh5TlNEdVc2SXYxZ2lnQmlRdUV4cTA5bE9WejQvWVlaVmdtR21pSEtQLzF0cXlCMFJqWEYybm5uMncKMGpVRXRSRUNnWUVBLzhyRUVLVU1BejVjN2IyaU95M2NsWmo0a2NzazV3MXgraWYvZjYvVUxmdGNMVGFCbFU3ZAorV21aaSt4NWFtTGpMTVI1QTdkNzBaMGFCNmpuTVAvaGpDa2xPL09UVjNKRUFRczRFR0ZMYjIyVmRHQ2ViRVJxCnd5bHpMVzIzQm5RNnNYL3NoSkhqUnhQV1AzTWEwT05lNCs0OStPZkE4RDJuUE5oM3UvTHY1NXNDZ1lFQTFLWGcKQi8rTHh0dGphZnF2N2ZZU3dBRitNRzdPSm1BanFMQWxIeURrV2Z5RzJ4TVA1OCttU0x0a2hudVM0R3lKeHFqYgp0OUJmR2RHSjJjUXBpejdORlVjSllGeWZyZ29EaVpFS2NTdE9rYzZMU0dtYTdwMnYvSlpkemtvMTlkcEQxZUpECjJ0bHdDWXp4SlNhSTRJaEsrV0dWL0lUYm9DZ0pYdzB6d1ovY1dya0NnWUFxS2c5bHV2OGU3Y0c5d3J1aVM2NEgKenQ1eWtlejBWVWdMZDFwcmZ0MVg4dzQvdWJOa25FcUUyWDVoRFVyNldYQ2ZLWWZWTUFLdUM5cUZscmI5WWNDWgpMUk1oTGNhRTdLWC9FZzFjemR6MGNqam5wU0dZTVRMMEZyb1FxL3cyaVNRL3JCbWR4THFWTmRUa1FxSVIrdGppCmM1d3RrbTVBYTdsTWsxWXhXaHRucndLQmdRQ3hBdXM4ZlRMRGMvaUxUY3lKRDErSVNUWGI1MERmblFQUjlkN1EKekxhSldiYUFRcHZvNFdlUC83MnNYTTFrMTdUUWs5dGlaYWZrZkJKK0hkWmZQUVhHZ24yQm8xaWdyV0ZJY0YzNgoyb3Zxdjc0ZHB4cjdLblJHbEh5OXJmVEJGTkdIQjNSb2hydkdsM1pjOEhqY1AxZjV3NHZ3eWo5d1VDT001aGFCClJTdE9zUUtCZ1FDRGR2cUpIOHBWMDk3QlpoZjJYNmF4WWpBQW1iSnVkam85RWRKL0ErOTN4SkNndEZxVkJ3R2cKRTBxbVhyR0hzd1BEZEtjc3R3a2N0c3pBVkpsZVZpdi9SdTExWW1QREEyT1Axd3V6SURxKzUyQlR0RW1odVI3cwpTRGVGU01RUmZ5SzJRMURIQ1g3R3RKekZPaFNkTVNJd2hKQnZhKzR0QkZVRmRrSEI4UU1qcEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlmQlgwMm1nejlMU1Y0MkFWN0VrZ2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE9URTVORGN4TTFvWERUSTJNRFV4T0RFNQpORGN4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExSG1uNTVEWTQyUFZNZXRvSjdiQWU2dDg0T0xBVmwxMWJxMDVWbkVMMWM0UXB1OVMKYy9kRnR1cEMwWHp5dktCWXFMOEN3dWF2cVJ5QUxKb3gxMThYT0ZpWlk1d29WZEhVTjd2Zkl4YUg5UGFsRGw0UAp1a1hwdWcxMUlmaFJWZGQ0N0l1NTFUOExaUDhaSEM5b0pWVTRkbUJYOGdaNDE2QzI2RUZXcUUzS2xxM3kvS2VaCllxbXUyUjBqZ05qeG1nMVJTbWcwNXJWd25EWkZXd0VSakozUjAzVldSVzRlRmhtSjJLYUxoaDU0dHkySmU2OUoKeStzMXlRZ2Z5V1FXcldrZ1JCUmY1ekpEZ09FRSs1WjMxK241bGk2UFpWYnZZUnp5eVlOWW13YXpqT2hkU3o2cApTR2xCTGVBa0hSNHhhRmJlMTBZNlB2RUtoVS90enQ0YU5QN2RBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREl5K0tYZ3l2dXhpZDAvVHVNQzhsTkplb3R4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkdLVVdIcEV2ckFXMkpGKy94VlkzalBGWGF3RisvdktiOWFTdmN6WEpoOUlNR1J5UW9FL3MrClN3aW83UGhLQUhVa2JRV1NnaUFUQldJTllvb2JyMVhhQjVYb1FBVUgwQmwvWUg3YUlzQzZWb2lCZmwwejJkWTMKTVJldlVPeVNtcEdKVjAvYWh0TGwwNmI3L3ZyaWY3TTB4STRpY1Z1dnFmSGpMS0VvQVc0NGYzUTFSYzhZek5rRgovQzRFR3llQXRkSU1WYW0xSjZMNXpITjZsMGh1Y1Q3RHhXWEhMTnlBRlRFN1Z1K2F6OFVobmlyWld1U1F5VCtTCkpqOFRzOHJzaXV1U0cya3N6Z2FzbHMybGZQUEhrOUZQd0czS3RFdXhleldPZzlGdjdYbXBKSU85MHkwZ3RQWlcKeitMMGRPZmV3S095WG5zK2NUR1ZWZWsxMVBBNUdGbkIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUm1Mc3ZTTUpvWFk4Z2g1dDVsVmVMekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNU1UazBOekV6V2hjTk1qWXdOVEU0TVRrMApOekV6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWklmYzhpQzdwMDNDTDlwQkRVdXhXNjNremh6QUsKQnlYcEg5NWt0aE9ORlp0WkdqQW1EaDJzdHdST0x6Rm5Lbldmd0hVUUFFRWtZSHJLaEhmMEg4YXZqNGV4OWtSTwpIU0V2SVBHWkFBRll2MkREd1dIUUdKNEo5MjFCbE5oREhrbDVVcmpnZ1k1NmNLZzBIZmZqRG9INzZmeDVaTzVsCm0zTGNiQnI5VStnNW5CaTNHTXRJdGhJOXhqRGF2VXdCVlg0WDNKZ1R2TzlNZ2hPcWkxbEhycG9HTDZ5WmZXMUQKR1U2aHVmSWlPdC9hSGwxK2I1eGc0VCtrYlJ0dVFaODFsbTRteE9uTmpwZHpoNkVlT3lwTnY4SDJYekNEem9jUQpEZ2ZLakZ2ekFvUTNzTndLWHZFRngzMDFIdVNEMnhxZHphMnhleTJoU2FHRmlldjRCcExoMnM4M0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZESXkrS1hneXZ1eGlkMC9UdU1DOGxOSgplb3R4TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFISkVLaG1qaDZRVmtUcER0SjF2c0RXb1ZPUktXdkZ2ZHFYNUpZUzVUQ1c1ZHgrVTQKQVFtTnVBRWFPZ1dyclNBRVBMa2didnM4MFdUWDdld2w0WER6Q3R2eVFJUWNtOVVzWWpGWVZ3YTJvdWFoeVpoVwo3NmlGanZLT0ZxeVY4RFFGcmI4OUJNWjYyMkY3T2hCSmdFVkJDRkROanFOUDFNSW85L0p4N2thYmNUU0QrWjVDCnpGaDEvVVc2dkV1ZWxxMzE3ZEYxRFB5cXdmK25kbm5CbUxFZ0lVMWx4eG9lSk9LWFpqekZ4V3N2VU5MdEROeVcKQklUdzVqbWZ1d3pEN3h4NG03NzFyY2xHUU16a3E5MmJGcWFCZ0Y0Q3pYbE9QZENRWEFZRmF5Q1JXTjRpdERhOApZR1g4STB6SWVqR0JUTlpDdHF5d1RydnJFYVdsNUJ1ZEdjTGNnQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMlNIM1BJZ3U2ZE53aS9hUVExTHNWdXQ1TTRjd0NnY2w2Ui9lWkxZVGpSV2JXUm93CkpnNGRyTGNFVGk4eFp5cDFuOEIxRUFCQkpHQjZ5b1IzOUIvR3I0K0hzZlpFVGgwaEx5RHhtUUFCV0w5Z3c4RmgKMEJpZUNmZHRRWlRZUXg1SmVWSzQ0SUdPZW5Db05CMzM0dzZCKytuOGVXVHVaWnR5M0d3YS9WUG9PWndZdHhqTApTTFlTUGNZdzJyMU1BVlYrRjl5WUU3enZUSUlUcW90WlI2NmFCaStzbVgxdFF4bE9vYm55SWpyZjJoNWRmbStjCllPRS9wRzBiYmtHZk5aWnVKc1Rwelk2WGM0ZWhIanNxVGIvQjlsOHdnODZIRUE0SHlveGI4d0tFTjdEY0NsN3gKQmNkOU5SN2tnOXNhbmMydHNYc3RvVW1oaFlucitBYVM0ZHJQTndJREFRQUJBb0lCQUVPelZYVW9PUWhyQnNKOQpKRW41aHZzcS9HVldsMkhwREtiOWFzZ1lCVXlPR2h2VUVJTXRENCtVbU9FUDBlV0sxWlh6Mmd3ZEtES0Jhb2ZPCmVlQkNNQjc1TDZRTFZ3ek1CRmEvZk5UcHJZSFFXZ2x2T0dJNzZyck16T0lQMk1aRW9VQVV6TlFqVVJ0WUdQbjMKQmgxam5wKy9PeHRXbndaTFM2cnlnZy9PbzYraUt2UHBLWGsvbGhGTHRvTStMbXU0Vk5uN0gyeEUwUS8ybjVWcQpNa3Q3MHY1dHZTOGFTbVY0Q0lQVzlFaXR1QkJkWDhOamJCcm95ZldYcFNzRE5BSDIyVERBT25ZRkp1c3RnVUhoCm1VczZORzg3TFBZbGRRNjhNQXFxbk5UQ0p6ZXNjTEZESWVDU2hWZlYzTkx3S3lPd05sMXUrb0NvOVNSVDY0aWUKVTN6SFFFRUNnWUVBOHVlODJNOXJFSm96dVA1bStvdHVZSUhFQ21QMENoSHh0KzN4bVNJVUJUbnFremxFTnZhagpab3JlSlVjSkdoUVl0ODJJeGxNYURkb3NCMGtOSGJESnlXM1B2alNLNmwvZ3NzdU5Gd3FzNFNFQ0MyaFNiSHF0CkhXdkZENXozdG9xc3VKUGJFcmZiS01mQzd6amVSNG9iY1NScXdEZDc5ZGVTbXJPMXRzaVBlK2NDZ1lFQTVOYU0KZzVIUFQrZGFKT01yT2NJd2tzdXhEYTZIYUJ6dEgxTlhoOHlnbzQyTGZMQThHWS9vSFFKK2x0MVMvT1Z6SGRPSwpLTWtXYjhaR2RNM2hHeGxmVlYvUWtxMFcyNEI5d2c1a0ViK1BRd2s4Ti9WTE5EYXpTbk5LbVhFdzNUenJMWW9QCnF3citLOEdpS0ZqN1M0eWdQdFhwTnhJYytlb0pxUTZzRURPNEtERUNnWUFreURxc2lod29VM0ZwbmZ4eURCTVcKd2creGt4a3RQVEpoSzhMZDhXOGVxM3A5K0xuL3FMRnRvYkdwNjJ2UmF5R2pFNWlXajVidWFnOG91ME1sTDlRZQprR1pZNHhQMkViYXczR250QjB6T2VuVVl6UjlPRmZXSTh2elFOSEMrVDVtQUNjT3V2ZkNONkZINGI2QVpMU3lpCm9XVVkzazRER0RXMi8yZVEyaVlBR1FLQmdRQ2VDaUplMXp0eXRwZUY5REd0SVJURXZOSVpYZGg4S2NZRnBWeEYKR0NnMDdCTlNXTEFaQTA3TmdpU0U4bk5XM3V3Q3hFNmRYa3NWaEx5eC9HR2pnb0ZaaCtPVytOMVpXTU1CVzBqMwpEUEhXM1REdWdJU2dtY3AyOTJxazBBeHNMcDlKQXhsUkNqV0JhS2doNzFvVjBoZjFiV3cwTVZrN3E4dGlLeFRmCjE2Z3VjUUtCZ1FDbUozNXRjOWRjNWpkNzMrbXFwWm83L2FmS3Qyc1lHZ0dCVTgxZlhnM0N1VEJVV01Cb25UbU8KQ0laZnRYR0VlOUxYQWdKRUplamtyOFZFTjBrR3RhQ1B0QmFzZW84aHhNYVA5WUl4alk5b0NKd2RUYk5UVjhDLwpLak5BQU9tTitCRU1tRWdOUlVlSDByeE84WWxlVGpHMUlJM3BzN29Tbk9xU1U0ODF2ZXcycXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlmQlgwMm1nejlMU1Y0MkFWN0VrZ2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE9URTVORGN4TTFvWERUSTJNRFV4T0RFNQpORGN4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExSG1uNTVEWTQyUFZNZXRvSjdiQWU2dDg0T0xBVmwxMWJxMDVWbkVMMWM0UXB1OVMKYy9kRnR1cEMwWHp5dktCWXFMOEN3dWF2cVJ5QUxKb3gxMThYT0ZpWlk1d29WZEhVTjd2Zkl4YUg5UGFsRGw0UAp1a1hwdWcxMUlmaFJWZGQ0N0l1NTFUOExaUDhaSEM5b0pWVTRkbUJYOGdaNDE2QzI2RUZXcUUzS2xxM3kvS2VaCllxbXUyUjBqZ05qeG1nMVJTbWcwNXJWd25EWkZXd0VSakozUjAzVldSVzRlRmhtSjJLYUxoaDU0dHkySmU2OUoKeStzMXlRZ2Z5V1FXcldrZ1JCUmY1ekpEZ09FRSs1WjMxK241bGk2UFpWYnZZUnp5eVlOWW13YXpqT2hkU3o2cApTR2xCTGVBa0hSNHhhRmJlMTBZNlB2RUtoVS90enQ0YU5QN2RBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREl5K0tYZ3l2dXhpZDAvVHVNQzhsTkplb3R4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkdLVVdIcEV2ckFXMkpGKy94VlkzalBGWGF3RisvdktiOWFTdmN6WEpoOUlNR1J5UW9FL3MrClN3aW83UGhLQUhVa2JRV1NnaUFUQldJTllvb2JyMVhhQjVYb1FBVUgwQmwvWUg3YUlzQzZWb2lCZmwwejJkWTMKTVJldlVPeVNtcEdKVjAvYWh0TGwwNmI3L3ZyaWY3TTB4STRpY1Z1dnFmSGpMS0VvQVc0NGYzUTFSYzhZek5rRgovQzRFR3llQXRkSU1WYW0xSjZMNXpITjZsMGh1Y1Q3RHhXWEhMTnlBRlRFN1Z1K2F6OFVobmlyWld1U1F5VCtTCkpqOFRzOHJzaXV1U0cya3N6Z2FzbHMybGZQUEhrOUZQd0czS3RFdXhleldPZzlGdjdYbXBKSU85MHkwZ3RQWlcKeitMMGRPZmV3S095WG5zK2NUR1ZWZWsxMVBBNUdGbkIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTnVmck55SGsvWURPaEQ3S25UZkVZVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNU1UazBOekV6V2hjTk1qWXdOVEU0TVRrMApOekV6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeWNIWEZCRDltZ2xZZldpVVRHOHcKVTMvTHF4ajZtcGZRNExIeUFER2pmeEtLS3ZZSzBIcjYzb0VkUkUrbjVoTDdnc044YnRtVmJWbjNZMWxZc0VKSAp3UTV4YVBFVjNqQ0w1RFdmY2U3OXBqN0psZkYvTTN1M1FyRElaeU9xTzRiSnAveG9tR1Z2ZXRkSUFTdkM1Q2xvClk1VC9KWm8xMXBOenhtQW5OVmxxSlRyRFVLNm11RmFNUFBlNGEreUxZRTJMQUc1UnNxZk5rUzRvaU4zRVRoSVAKcThZelFTbk5ERzdvemxWc1NLS0p5VTdxaVBYZGQvNkIrV1lGREtuV2JqZk9MK3MyTW1kVDdGdmFURXljY3JTUApsUE1DU09URDJBVHhkei9pSVYzUHZKSEc5NzZBUThVTVdocjkzQklBM2lHaERHbDczMEI5cmdYOWw4L0tpdUlzCkh3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JReU12aWw0TXI3c1luZApQMDdqQXZKVFNYcUxjVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBa1RXM0lzQkhRUU1NNExvaU1Gek53RWZFeVQzOWgKdjJ1RWRmR1JLYUx0dWJOL28rT0pqaEY3Z3UvRGVWdzRPNWlSQjNEVkYwUnZTSWRKNVhFbStRU2tEK0YxeWpIcwo1SEhmMUZ1MDcwYjgzME84VWxrMEZHRmpaTnRCSzFkdGd3djFIT1hRaE1oNk5BMktsWnNOMS94ZlIwZ3FtRzZPClBTUklGMVFXZXBkVUgyclJwYTA3T3VVWVBnMlNtb0FHSVlDbmJqREVVZTgxMDRqcXdrTkpralFWbnpveWFmVlkKYk5uN0dXTWNJT1JvbzVVQzBaSnRUTDdkZDRjaE5tSjBSTFdVUEN4bXkzZVdTWTdUZEhuenNGMnllL0tBYUZmMQpodzV3d3NaYVEvdjFIT20wamJEdU1SbXRjV1g5eVpnWG9MSVRzdFczUitoU1lZZ2VDenFtQXBhMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeWNIWEZCRDltZ2xZZldpVVRHOHdVMy9McXhqNm1wZlE0TEh5QURHamZ4S0tLdllLCjBIcjYzb0VkUkUrbjVoTDdnc044YnRtVmJWbjNZMWxZc0VKSHdRNXhhUEVWM2pDTDVEV2ZjZTc5cGo3SmxmRi8KTTN1M1FyRElaeU9xTzRiSnAveG9tR1Z2ZXRkSUFTdkM1Q2xvWTVUL0pabzExcE56eG1Bbk5WbHFKVHJEVUs2bQp1RmFNUFBlNGEreUxZRTJMQUc1UnNxZk5rUzRvaU4zRVRoSVBxOFl6UVNuTkRHN296bFZzU0tLSnlVN3FpUFhkCmQvNkIrV1lGREtuV2JqZk9MK3MyTW1kVDdGdmFURXljY3JTUGxQTUNTT1REMkFUeGR6L2lJVjNQdkpIRzk3NkEKUThVTVdocjkzQklBM2lHaERHbDczMEI5cmdYOWw4L0tpdUlzSHdJREFRQUJBb0lCQVFDSDdSRXpFck5ZcUwwMgpXRk81SHh2bTFXMW95ejVqRXE4R0FyeXd4c0NJNXZ1eEwreGZRc3RyUm45cU8yUTVqRVpvZGIyS2pRcXdEbkd1ClBFNlZDVUtBWFhPb3FPdjdzcWM4eTZldFFiOGYxcU5IWXRrNDNUdTlNWThDZGJQRndPeHhRWXRTU055UFhTVEUKclMvek9iWjdpTEZSS3hEa2pKanVhRzloOE9palJUNGFoTlVpRzh3UDR3ajNiaUgwbHV5amhESXRtNVJHSjRxVApsL1hCRW0vQzh1MlRvU2hqNzJ3YTdybjMvZUdrZ1U5SUxzaFZ3M2lBNkhRcTQ4bldiMnFKclMxem5tTDVQb1VHCjRLYXdxSGpqbGVPcWpMaWV2VFBvVEpwTnl0aS9MYWcyT0ppbnRrMGFaWjJQaEtxVFdvY29jU3RkRHBEUVVucW4KUzg1SHI1YnBBb0dCQU5meEsrSW11N1BYTEliUkFoTVVZejBmT04zT1NmT0xlZzZtMWw0TzdtTVQ4bm5pRDlEeQpzaktCbnk5OEFFQ2E2MWRQdjNRQkpweEo3a3BEYkpXQ2laRGorb1FFdjdZbnFZaFE2cXJkdGpsMzRrQjZCMnV6CjFyL3BiQmJpU2s3OXVvRkY3OGV6QnVpZUVHdDVvQXVWT1B6d2I3ekZEbHJWZXg2NmkxZXNQeUxWQW9HQkFPOHYKQzZmRHVTMzNkbTd3a0UxNjBtcEFyNDRUdWV0S1V2eGV4cWdjcWNpTENGbUZiQkt4NDlCUU5ZUW13OWpRTmtWRgpwS1FVUE05cHZES3haZWUwaDBQcTNaaTU2T2ovOHhDdXJyVElQRWQ5bDVta2czM0wrMk0zaWNqVkJoSlNjRk45Ckh6dWxMOUtMN2xMNGlBbFZrTE1TK3g4ckhXaXdnV1FVdVFndTZVVWpBb0dBYU9VckZ2a1B0c1Z3U0xEZ25Cb00KTnRXaXp3UDFJa3YvWjN5ZHB5VURvYmMvMHZzQUNkVEt3UVA4S3BuR21adG5kSXMxaWdsQkV5eEtoMktITFgweQppK0ppZjV5Njc2WUdrVVFWS2hqMitxV0VqeU4zMVZhUG03dXNtTlVsbVlkaEFJalRlQ003Mk9WblBuM2ZRNkVpCkJLUmE4c3lhTTM5K0JpaEJwYjN6RVYwQ2dZRUF6OWRNeElLaWh0d1Q4VUZmMDhRWDFqYlJscDl6bm85ZVgya28KTFd1QzZmNU95aVBUanNkQUZJT3VqV0IyTFJCNUtHYmxNNk5XV0ZJa05OVE1uYlRWR2VLY254dGwxaHFicC9KegpaQ3JmbnF2M01ZNndxSDY1dXpUR3FWcmJSTTZZUnlSaUlKMWhXZzg0a0tiZzUyT1FNdHdhbGJJTWd5MWxzb2NEClpxWUZGSXNDZ1lFQTFLTVFWbjdITDRqL1IrbEFHNWd6eHpKdEhyeDZsd2ZDUWVxM3RqQlhraHVlRS84YnNMV2oKbjFaNFBDVEpVNml3NnduelhwYWVVRS9YZW9nNDQvZjhZNUV0TlFIbDFEWm1FckpKM2EyL1JBaVM3MHhLajNaYQoxdjZURnlzblBZYlVlSS8zMXM5VTJGQkJ4SUszUkRMR21OSEVRMVIzSlVGb2xPc3FvK1hLQURvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  enable-ingress-controller: "true"
  enable-envoy-config: "true"
  enforce-ingress-https: "true"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"
  ingress-lb-annotation-prefixes: "service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
  ingress-default-lb-mode: shared
  ingress-shared-lb-service-name: cilium-ingress

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/charts/cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/charts/cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
    cilium.io/ingress: "true"
spec:
  internalTrafficPolicy: Cluster #ADDED
  ports:
  - name: http
    port: 80
    protocol: TCP
    nodePort: 80
  - name: https
    port: 443
    protocol: TCP
    nodePort: 443
  type: NodePort
---
# Source: cilium/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/charts/cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.0@sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.0@sha256:bc00f086285d2d287dd662a319d3dbe90e57179515ce8649425916aecaa9ac3c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/charts/cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/charts/cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/charts/cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: "192.192.192.192"
  ports:
  - port: 9999
